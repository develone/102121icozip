////////////////////////////////////////////////////////////////////////////////
//
// Filename:	./regdefs.h
// {{{
// Project:	ICO Zip, iCE40 ZipCPU demonstration project
//
// DO NOT EDIT THIS FILE!
// Computer Generated: This file is computer generated by AUTOFPGA. DO NOT EDIT.
// DO NOT EDIT THIS FILE!
//
// CmdLine:	autofpga autofpga -d -o . clock50.txt global.txt version.txt buserr.txt pic.txt pwrcount.txt gpio.txt sdramdev.txt bkram.txt hbconsole.txt zipbones.txt mem_sdram_bkram.txt
//
// Creator:	Dan Gisselquist, Ph.D.
//		Gisselquist Technology, LLC
//
////////////////////////////////////////////////////////////////////////////////
// }}}
// Copyright (C) 2017-2021, Gisselquist Technology, LLC
// {{{
// This program is free software (firmware): you can redistribute it and/or
// modify it under the terms of  the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
// target there if the PDF file isn't present.)  If not, see
// <http://www.gnu.org/licenses/> for a copy.
// }}}
// License:	GPL, v3, as defined and found on www.gnu.org,
// {{{
//		http://www.gnu.org/licenses/gpl.html
//
////////////////////////////////////////////////////////////////////////////////
//
// }}}
#ifndef	REGDEFS_H
#define	REGDEFS_H


//
// The @REGDEFS.H.INCLUDE tag
//
// @REGDEFS.H.INCLUDE for masters
// @REGDEFS.H.INCLUDE for peripherals
// And finally any master REGDEFS.H.INCLUDE tags
// End of definitions from REGDEFS.H.INCLUDE


//
// Register address definitions, from @REGS.#d
//
// The bus timer
#define	R_BUSTIMER      	0x00400000	// 00400000, wbregs names: BUSTIMER
// The watchdog timer
#define	R_WATCHDOG      	0x00800000	// 00800000, wbregs names: WATCHDOG
// CONSOLE registers
#define	R_CONSOLE_FIFO  	0x00c00004	// 00c00000, wbregs names: UFIFO
#define	R_CONSOLE_UARTRX	0x00c00008	// 00c00000, wbregs names: RX
#define	R_CONSOLE_UARTTX	0x00c0000c	// 00c00000, wbregs names: TX
#define	R_BUILDTIME     	0x01000000	// 01000000, wbregs names: BUILDTIME
#define	R_BUSERR        	0x01000004	// 01000004, wbregs names: BUSERR
#define	R_PIC           	0x01000008	// 01000008, wbregs names: PIC
#define	R_GPIO          	0x0100000c	// 0100000c, wbregs names: GPIO, GPI, GPO
#define	R_PWRCOUNT      	0x01000010	// 01000010, wbregs names: PWRCOUNT
#define	R_VERSION       	0x01000014	// 01000014, wbregs names: VERSION
#define	R_BKRAM         	0x01400000	// 01400000, wbregs names: RAM
#define	R_SDRAM         	0x02000000	// 02000000, wbregs names: SDRAM
// ZipCPU control/debug registers
#define	R_ZIPCTRL       	0x04000080	// 04000000, wbregs names: CPU, ZIPCTRL
#define	R_ZIPREGS       	0x04000000	// 04000000, wbregs names: ZIPREGS
#define	R_ZIPS0         	0x04000000	// 04000000, wbregs names: SR0
#define	R_ZIPS1         	0x04000004	// 04000000, wbregs names: SR1
#define	R_ZIPS2         	0x04000008	// 04000000, wbregs names: SR2
#define	R_ZIPS3         	0x0400000c	// 04000000, wbregs names: SR3
#define	R_ZIPS4         	0x04000010	// 04000000, wbregs names: SR4
#define	R_ZIPS5         	0x04000014	// 04000000, wbregs names: SR5
#define	R_ZIPS6         	0x04000018	// 04000000, wbregs names: SR6
#define	R_ZIPS7         	0x0400001c	// 04000000, wbregs names: SR7
#define	R_ZIPS8         	0x04000020	// 04000000, wbregs names: SR8
#define	R_ZIPS9         	0x04000024	// 04000000, wbregs names: SR9
#define	R_ZIPS10        	0x04000028	// 04000000, wbregs names: SR10
#define	R_ZIPS11        	0x0400002c	// 04000000, wbregs names: SR11
#define	R_ZIPS12        	0x04000030	// 04000000, wbregs names: SR12
#define	R_ZIPSSP        	0x04000034	// 04000000, wbregs names: SSP, SR13
#define	R_ZIPCC         	0x04000038	// 04000000, wbregs names: ZIPCC, CC, SCC, SR14
#define	R_ZIPPC         	0x0400003c	// 04000000, wbregs names: ZIPPC, PC, SPC, SR15
#define	R_ZIPUSER       	0x04000040	// 04000000, wbregs names: ZIPUSER
#define	R_ZIPU0         	0x04000040	// 04000000, wbregs names: UR0
#define	R_ZIPU1         	0x04000044	// 04000000, wbregs names: UR1
#define	R_ZIPU2         	0x04000048	// 04000000, wbregs names: UR2
#define	R_ZIPU3         	0x0400004c	// 04000000, wbregs names: UR3
#define	R_ZIPU4         	0x04000050	// 04000000, wbregs names: UR4
#define	R_ZIPU5         	0x04000054	// 04000000, wbregs names: UR5
#define	R_ZIPU6         	0x04000058	// 04000000, wbregs names: UR6
#define	R_ZIPU7         	0x0400005c	// 04000000, wbregs names: UR7
#define	R_ZIPU8         	0x04000060	// 04000000, wbregs names: UR8
#define	R_ZIPU9         	0x04000064	// 04000000, wbregs names: UR9
#define	R_ZIPU10        	0x04000068	// 04000000, wbregs names: SR10
#define	R_ZIPU11        	0x0400006c	// 04000000, wbregs names: SR11
#define	R_ZIPU12        	0x04000070	// 04000000, wbregs names: SR12
#define	R_ZIPUSP        	0x04000074	// 04000000, wbregs names: USP, UR13
#define	R_ZIPUCC        	0x04000078	// 04000000, wbregs names: ZIPUCC, UCC
#define	R_ZIPUPC        	0x0400007c	// 04000000, wbregs names: ZIPUPC, UPC
#define	R_ZIPSYSTEM     	0x04000100	// 04000000, wbregs names: ZIPSYSTEM, ZIPSYS


//
// The @REGDEFS.H.DEFNS tag
//
// @REGDEFS.H.DEFNS for masters
#define	CLKFREQHZ	50000000
#define	RESET_ADDRESS	0x02000000
// @REGDEFS.H.DEFNS for peripherals
#define	BKRAMBASE	0x01400000
#define	BKRAMLEN	0x00002000
#define	SDRAMBASE	0x02000000
#define	SDRAMLEN	0x01000000
// @REGDEFS.H.DEFNS at the top level
// End of definitions from REGDEFS.H.DEFNS
//
// The @REGDEFS.H.INSERT tag
//
// @REGDEFS.H.INSERT for masters
// @REGDEFS.H.INSERT for peripherals

#define	CPU_GO		0x0000
#define	CPU_RESET	0x0040
#define	CPU_INT		0x0080
#define	CPU_STEP	0x0100
#define	CPU_STALL	0x0200
#define	CPU_HALT	0x0400
#define	CPU_CLRCACHE	0x0800
#define	CPU_sR0		0x0000
#define	CPU_sSP		0x000d
#define	CPU_sCC		0x000e
#define	CPU_sPC		0x000f
#define	CPU_uR0		0x0010
#define	CPU_uSP		0x001d
#define	CPU_uCC		0x001e
#define	CPU_uPC		0x001f

#define	RESET_ADDRESS	0x02000000


// @REGDEFS.H.INSERT from the top level
typedef	struct {
	unsigned	m_addr;
	const char	*m_name;
} REGNAME;

extern	const	REGNAME	*bregs;
extern	const	int	NREGS;
// #define	NREGS	(sizeof(bregs)/sizeof(bregs[0]))

extern	unsigned	addrdecode(const char *v);
extern	const	char *addrname(const unsigned v);
// End of definitions from REGDEFS.H.INSERT


#endif	// REGDEFS_H
